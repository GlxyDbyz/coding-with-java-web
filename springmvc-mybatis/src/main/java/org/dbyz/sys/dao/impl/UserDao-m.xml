<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.dbyz.sys.dao.IUserDao">
	<resultMap id="BaseResultMap" type="org.dbyz.sys.model.SysUser">
		<id column="ID" property="id" jdbcType="BIGINT" />
		<result column="NAME" property="name" jdbcType="VARCHAR" />
		<result column="PASSWORD" property="password" jdbcType="VARCHAR" />
		<result column="ROLE_ID" property="roleId" jdbcType="INTEGER" />
		<result column="EMAIL" property="email" jdbcType="VARCHAR" />
		<result column="UUID" property="uuid" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	
	<sql id="Base_Column_List">
		ID, NAME, PASSWORD, ROLE_ID, EMAIL, UUID, CREATE_TIME
	</sql>
	
<!-- begin -->

	<select id="check" parameterType="org.dbyz.sys.model.SysUser" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from SYS_USER where NAME=#{name,jdbcType=VARCHAR} and PASSWORD=#{password,jdbcType=VARCHAR}
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where ID = #{id,jdbcType=BIGINT}
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from sys_user
		where ID = #{id,jdbcType=BIGINT}
	</delete>
	
	<insert id="insert" parameterType="org.dbyz.sys.model.SysUser">
		insert into sys_user (ID, NAME, PASSWORD,ROLE_ID, EMAIL, UUID,CREATE_TIME)
		values 
		(#{id,jdbcType=BIGINT},#{name,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{roleId,jdbcType=INTEGER},#{email,jdbcType=VARCHAR}, #{uuid,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP})
	</insert>
	
	<insert id="insertSelective" parameterType="org.dbyz.sys.model.SysUser">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="name != null">
				NAME,
			</if>
			<if test="password != null">
				PASSWORD,
			</if>
			<if test="roleId != null">
				ROLE_ID,
			</if>
			<if test="email != null">
				EMAIL,
			</if>
			<if test="uuid != null">
				UUID,
			</if>
			<if test="createTime != null">
				CREATE_TIME,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="uuid != null">
				#{uuid,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	
	<update id="updateByPrimaryKeySelective" parameterType="org.dbyz.sys.model.SysUser">
		update sys_user
		<set>
			<if test="name != null">
				NAME = #{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				PASSWORD = #{password,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				ROLE_ID = #{roleId,jdbcType=INTEGER},
			</if>
			<if test="email != null">
				EMAIL = #{email,jdbcType=VARCHAR},
			</if>
			<if test="uuid != null">
				UUID = #{uuid,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where ID = #{id,jdbcType=BIGINT}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="org.dbyz.sys.model.SysUser">
		update sys_user
		set 
		NAME = #{name,jdbcType=VARCHAR},
		PASSWORD = #{password,jdbcType=VARCHAR},
		ROLE_ID = #{roleId,jdbcType=INTEGER},
		EMAIL = #{email,jdbcType=VARCHAR},
		UUID = #{uuid,jdbcType=VARCHAR},
		CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
		where ID = #{id,jdbcType=BIGINT}
	</update>
	
</mapper>